---
- name: Setup Firefly-iii
  become: true
  hosts: firefly-iii
  vars:
    state: "started"
    container_name_mysql: "firefly_iii_db"
    container_name_firefly: "firefly_iii"
    hostname_mysql: "db"
    hostname_firefly: "firefly"
    mysql_user: "firefly"
    mysql_db: "firefly"
    firefly_port: "8080"
    site_owner: "ian@shehadeh.net"
  tasks:
    - name: Install Docker
      tags: dep
      ansible.builtin.include_role:
        role: install_docker
    - name: Setup Docker Volumes
      tags: volumes
      vars:
        volume_state: "{{'present' if state != 'absent' else 'absent'}}"
      block:
        - name: Create Database Volume
          tags: mysql
          community.docker.docker_volume:
            name: firefly_iii_db
            state: "{{volume_state}}"
        - name: Create Upload Volume
          tags: firefly
          community.docker.docker_volume:
            name: firefly_iii_upload
            state: "{{volume_state}}"
    - name: Setup Docker Networks
      tags:
        - mysql
        - firefly
      become: true
      vars:
        network_state: "{{  'present' if state != 'absent' else 'absent' }}"
      block:
        - name: Create Database Volume
          community.docker.docker_network:
            name: firefly_iii
            driver: bridge
            state: "{{network_state}}"
    - name: Generate MySQL password
      tags:
        - mysql
        - firefly
      ansible.builtin.set_fact:
        mysql_password: "{{lookup('ansible.builtin.password', 'credentials/mysql_' + mysql_user, length=15)}}"

    - name: Generate Firefly-III app key
      tags:
        - mysql
        - firefly
      ansible.builtin.set_fact:
        firefly_app_key: "{{lookup('ansible.builtin.password', 'credentials/firefly_app_key', length=32)}}"

    - name: Setup Database Container
      tags: container
      vars:
        container_state: "{{state}}"
      block:
        - name: Create MySQL Container
          tags: mysql
          community.docker.docker_container:
            name: "{{container_name_mysql}}"
            image: "mariadb"
            hostname: "{{hostname_mysql}}"
            networks:
              - name: "firefly_iii"
            restart_policy: always 
            state: "{{container_state}}"
            env:
              MYSQL_RANDOM_ROOT_PASSWORD: "yes"
              MYSQL_USER: "{{mysql_user}}"
              MYSQL_PASSWORD: "{{mysql_password}}"
              MYSQL_DATABASE: "{{mysql_db}}"
            volumes:
              - "firefly_iii_db:/var/lib/mysql"

        - name: Create Firefly-iii Container
          tags: firefly
          community.docker.docker_container:
            name: "{{container_name_firefly}}"
            image: "fireflyiii/core:latest"
            hostname: "{{hostname_firefly}}"
            networks:
              - name: "firefly_iii"
            restart_policy: always
            state: "{{container_state}}"
            volumes:
              - "firefly_iii_upload:/var/www/html/storage/upload"
            ports:
              - "{{firefly_port}}:8080"
            env:
              # You can leave this on "local". If you change it to production most console commands will ask for extra confirmation.
              # Never set it to "testing".
              APP_ENV: local

              # Set to true if you want to see debug information in error screens.
              APP_DEBUG: "false"

              APP_URL: "{{firefly_app_url}}"

              # ALSO can be set with SITE_OWNER_FILE
              SITE_OWNER: "{{site_owner}}"

              APP_KEY: "{{firefly_app_key}}"

              DEFAULT_LANGUAGE: en_US
              DEFAULT_LOCALE: equal
              TZ: America/New_York

              # TODO setup reverse proxy
              TRUSTED_PROXIES: ""

              # log to stdout to let docker handle logs
              LOG_CHANNEL: stdout
              APP_LOG_LEVEL: notice
              # AUDIT_LOG_CHANNEL: ""
              AUDIT_LOG_LEVEL: emergency

              # Database Config
              DB_CONNECTION: mysql
              DB_HOST: "{{hostname_mysql}}"
              DB_PORT: "3306"
              DB_DATABASE: "{{mysql_db}}"
              DB_USERNAME: "{{mysql_user}}"
              DB_PASSWORD: "{{mysql_password}}"
              
              # cache config
              # TODO: redis?
              CACHE_DRIVER: file
              SESSION_DRIVER: file

              # map config
              # lat/long are for smcm
              # TODO: make this configurable
              ENABLE_EXTERNAL_MAP: "true"
              MAP_DEFAULT_LAT: "38.191114913536545"
              MAP_DEFAULT_LONG: "-76.42901378761147"
              MAP_DEFAULT_ZOOM: "6"


              # auth settings
              AUTHENTICATION_GUARD: web
              AUTHENTICATION_GUARD_HEADER: REMOTE_USER
              AUTHENTICATION_GUARD_EMAIL: ""
