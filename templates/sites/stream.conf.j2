
# Multiple instances of radarr are loadbalanced
upstream radarr {
{% for host in groups['radarr'] %}
    server {{ hostvars[host].nebula_ip }}:{{ hostvars[host].radarr_config.port | default(7878) }}
    {%- if hostvars[host].nginx_weight is defined -%}
        weight={{hostvars[host].nginx_weight}}
    {%- endif -%};
{% endfor %}
}

upstream plex {
{% for host in groups['plex'] %}
    server {{ hostvars[host].nebula_ip }}:{{ hostvars[host].plex_port | default(32400) }}
    {%- if hostvars[host].nginx_weight is defined -%}
        weight={{hostvars[host].nginx_weight}}
    {%- endif -%};
{% endfor %}
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        alias /usr/share/nginx/challenges/.well-known/acme-challenge/;
    }

    location / {
	    return 301 https://$host$request_uri;
    }
}
{% if have_ssl_certs %}
server {
    listen       443 ssl http2 default_server;
    listen       [::]:443 ssl http2 default_server;
    server_name  {{ server_name }};
    root         /usr/share/nginx/html;

    ssl_certificate "/etc/pki/nginx/{{server_name}}.pem";
    ssl_certificate_key "/etc/pki/nginx/{{server_name}}.key";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;



    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
    gzip_disable "MSIE [1-6]\.";


    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Host $http_host; # do I still need this with host?
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
    proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
    proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

    # Required for Websockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    proxy_redirect off;
    proxy_buffering off;

    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    location / {
        proxy_pass http://plex;
    }

    location /ctrl/ {
        auth_basic             "Restricted";
        auth_basic_user_file   /etc/nginx/{{ server_name }}.htpasswd;

        # Radarr Configuration
        location /ctrl/radarr {
            proxy_pass http://radarr;
        }

        # Torrent Interface, Currently using flood
        location /ctrl/torrents {
            proxy_pass http://{{ hostvars[groups['flood'][0]].nebula_ip }}:{{ hostvars[groups['flood'][0]].flood_port | default(3000) }};
        }

        # Jackett Config
        #    If there are multiple jackett instances they're named and put on seperate paths    
        {% for host in groups['jackett'] %}
        location /ctrl/jackett/{{ hostvars[host].app_name | default('') }} {
            proxy_pass http://{{ hostvars[host].nebula_ip }}:{{ hostvars[host].jackett_config.port | default(9117) }};
            proxy_redirect off;
        }
        {% endfor %}
    }

    # Error Pages
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
{% endif %}