{% set core_server_config %}
# increase the maximum file upload size if needed: by default nginx limits file upload to 1MB (413 Entity Too Large error)
client_max_body_size 100m;

# log file locations
# combined log format prepends the virtualhost/domain name to log entries
access_log  /var/log/nginx/access.log combined;
error_log   /var/log/nginx/error.log;

location / {
    # default index file when no file URI is requested
    index index.php;
    try_files _ /index.php$is_args$args;
}

location ~ (index)\.php$ {
    try_files $uri =404;
    # slim API - split URL path into (script_filename, path_info)
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # pass PHP requests to PHP-FPM
    fastcgi_pass   unix:{{ shaarli_php_fpm_socket_address }};
    fastcgi_index  index.php;
    include        fastcgi.conf;
}

location ~ /doc/html/ {
    default_type "text/html";
    try_files $uri $uri/ $uri.html =404;
}

location = /favicon.ico {
    # serve the Shaarli favicon from its custom location
    alias {{ shaarli_dir }}/images/favicon.ico;
}

# allow client-side caching of static files
location ~* \.(?:ico|css|js|gif|jpe?g|png|ttf|oet|woff2?)$ {
    expires    max;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    # HTTP 1.0 compatibility
    add_header Pragma public;
}
{% endset %}

{% if not shaarli_https %}
server {
    listen       80;
    server_name  {{ shaarli_domain }};
    root         {{ shaarli_dir }};

    {{ core_server_config }}
}
{% else %}

{% if not have_ssl_certs %}
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        alias /usr/share/nginx/challenges/.well-known/acme-challenge/;
    }

    location / {
	    return 301 https://$host$request_uri;
    }
}
{% else %}
server {
    listen       80;
    server_name  {{ shaarli_domain }};

    # redirect all plain HTTP requests to HTTPS
    return 301 https://{{ shaarli_domain }}$request_uri;
}

server {
    # ipv4 listening port/protocol
    listen       443 ssl http2;
    # ipv6 listening port/protocol
    listen           [::]:443 ssl http2;
    server_name  {{ shaarli_domain }};
    root         {{ shaarli_dir }};

    # paths to private key and certificates for SSL/TLS
    ssl_certificate      {{ letsencrypt_certificate_path }}/{{ shaarli_domain }}.pem;
    ssl_certificate_key  {{ letsencrypt_certificate_path }}/{{ shaarli_domain }}.key;

    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:50m;
    ssl_prefer_server_ciphers on;

    {{ core_server_config }}
}
{% endif %}
{% endif %}
